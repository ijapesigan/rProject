@Article{Eddelbuettel-Balamuta-2017,
  author = {Dirk Eddelbuettel and James Joseph Balamuta},
  date = {2017-08},
  journaltitle = {PeerJ Preprints},
  title = {Extending {R} with {C++}: A brief introduction to {Rcpp}},
  doi = {10.7287/peerj.preprints.3188v1},
  number = {3},
  volume = {3188v1},
  abstract = {R has always provided an application programming interface (API) for extensions. Based on the C language, it uses a number of macros and other low-level constructs to exchange data structures between the R process and any dynamically-loaded component modules authors added to it. With the introduction of the Rcpp package, and its later refinements, this process has become considerably easier yet also more robust. By now, Rcpp has become the most popular extension mechanism for R. This article introduces Rcpp, and illustrates with several examples how the Rcpp Attributes mechanism in particular eases the transition of objects between R and C++ code.},
  publisher = {{PeerJ}},
  annotation = {r, r-packages},
}
